<?php

/*
 * This file is part of Replum: the web widget framework.
 *
 * Copyright (c) Dennis Birkholz <dennis@birkholz.org>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

require_once(__DIR__ . '/../vendor/autoload.php');

function print_icon_method($iconId) {
    $fnName = \lcfirst(\implode(\array_map('\ucfirst', \explode('-', $iconId))));

    if ($fnName === 'list' || $fnName === 'print' || $fnName === 'try' || $fnName === 'clone') {
        $fnName .= 'Icon';
    }

    elseif ($iconId === '500px') {
        $fnName = 'fiveHundredPx';
    }
?>
    /**
     * Create "<?= $iconId ?>" icon
     */
    public static function <?= $fnName ?>() : self
    {
        return new self('<?= $iconId ?>');
    }

<?php
}

$icons = \Symfony\Component\Yaml\Yaml::parse(\file_get_contents('https://raw.githubusercontent.com/FortAwesome/Font-Awesome/v4.7.0/src/icons.yml'));

?>
<<?= '?php' . PHP_EOL ?>
/*
 * This file is part of Replum: the web widget framework.
 *
 * Copyright (c) Dennis Birkholz <dennis@birkholz.org>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * WARNING: This file is automatically generated! Do not edit, modify the generator.
 */

 namespace Replum\FontAwesome;

 use \Replum\Html\HtmlElement;
 use \Replum\PageInterface;

 final class Icon extends HtmlElement
 {
    const TAG = 'i';

    const AVAILABLE_ICONS = [
<?php foreach ($icons['icons'] as $icon): ?>
        '<?= $icon['id'] ?>' => true, // <?= $icon['name'] . PHP_EOL ?>
<?php foreach ((isset($icon['aliases']) ? $icon['aliases'] : []) as $alias): ?>
        '<?= $alias ?>' => true, // Alias of <?= $icon['name'] ?> (<?= $icon['id'] ?>)
<?php endforeach; ?>
<?php endforeach; ?>
    ];

    /**
     * @string
     */
    private $icon;

    public function getIcon() : string
    {
        return $this->icon;
    }

    public function __construct(string $icon)
    {
        if (!isset(self::AVAILABLE_ICONS[$icon])) {
            throw new \InvalidArgumentException('Supplied icon "' . $icon . '" does not exist in Font Awesome v4.7.0');
        }

        $this->icon = $icon;
        $this->addClass('fa');
        $this->addClass('fa-' . $icon);
    }

<?php


foreach ($icons['icons'] as $icon) {
    print_icon_method($icon['id']);
    foreach ((isset($icon['aliases']) ? $icon['aliases'] : []) as $alias) {
        print_icon_method($alias);
    }
}
?>
}
